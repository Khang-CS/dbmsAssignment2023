CREATE DATABASE btl;
GO

USE btl;

CREATE TABLE BOOK
(
	Book_ID INT IDENTITY(1,1) PRIMARY KEY,
	Book_name VARCHAR(255) NOT NULL,
	O_Price INT NOT NULL,
	Discount INT NOT NULL,
	Price AS O_Price - O_Price*(Discount/100),
	Publish_year DATE DEFAULT GETDATE(),
	Description TEXT,
	Ratings INT DEFAULT 5 CHECK (Ratings >=0 AND Ratings<=5),
	Thumbnail VARCHAR(255),
	Reviews_N INT DEFAULT 0,
	Quantity INT DEFAULT 0,
	Deleted BIT DEFAULT 0
);

CREATE TABLE AUTHOR
(
	Author_ID INT IDENTITY(1,1) PRIMARY KEY,
	Author_name VARCHAR(255)
);

CREATE TABLE WRITE
(
	Author_ID INT,
	Book_ID INT,
	PRIMARY KEY (Author_ID, Book_ID),
	FOREIGN KEY (Author_ID) REFERENCES AUTHOR(Author_ID),
	FOREIGN KEY (Book_ID) REFERENCES BOOK(Book_ID)
);

CREATE TABLE PUBLISHER
(
	Publisher_ID INT IDENTITY(1,1) PRIMARY KEY,
	Publisher_name VARCHAR(255)
);

CREATE TABLE PUBLISH
(
	Publisher_ID INT,
	Book_ID INT,
	PRIMARY KEY (Publisher_ID, Book_ID),
	FOREIGN KEY (Publisher_ID) REFERENCES PUBLISHER(Publisher_ID),
	FOREIGN KEY (Book_ID) REFERENCES BOOK(Book_ID)
);

CREATE TABLE GENRE
(
	Genre_ID INT IDENTITY(1,1) PRIMARY KEY,
	Genre_name VARCHAR(255)
);

CREATE TABLE BELONGS_TO
(
	Genre_ID INT,
	Book_ID INT,
	PRIMARY KEY(Genre_ID, Book_ID),
	FOREIGN KEY (Genre_ID) REFERENCES GENRE (Genre_ID),
	FOREIGN KEY (Book_ID) REFERENCES BOOK (Book_ID)
);

CREATE TABLE ACCOUNT
(
	Account_ID INT IDENTITY(1,1) PRIMARY KEY,
	FName VARCHAR(255) NOT NULL,
	LName VARCHAR(255) NOT NULL,
	Email VARCHAR(255) UNIQUE NOT NULL CHECK (Email LIKE '%@%.%'),
	TelephoneNum VARCHAR(15) UNIQUE CHECK (TelephoneNum NOT LIKE '%[^0-9]%'),
	H_Password VARCHAR(255),--CHECK BY BACKEND
	Birthday DATE CHECK (Birthday < GETDATE()),
	Address_M VARCHAR(255),
	Deleted BIT DEFAULT 0
);

CREATE TABLE ROLE
(
	Role_ID INT IDENTITY(1,1) PRIMARY KEY,
	Role_name varchar(255) NOT NULL
);

CREATE TABLE STAFF
(
	Staff_ID INT PRIMARY KEY,
	Salary INT,
	Role_ID INT,
	FOREIGN KEY (Role_ID) REFERENCES ROLE (Role_ID),
	FOREIGN KEY
	(Staff_ID) REFERENCES ACCOUNT
	(Account_ID)
);

CREATE TABLE CUSTOMER
(
	Customer_ID INT PRIMARY KEY,
	Bank_ID VARCHAR(255),
	Bank_name VARCHAR(255),
	FOREIGN KEY (Customer_ID) REFERENCES ACCOUNT (Account_ID)
);

CREATE TABLE SHIPPING_METHOD
(
	Method_ID INT IDENTITY(1,1) PRIMARY KEY,
	Shipping_name VARCHAR(255) NOT NULL,
	Fee INT NOT NULL check(Fee >0)

);

CREATE TABLE PAYMENT_METHOD
(
	Payment_ID INT IDENTITY(1,1) PRIMARY KEY,
	Payment_name VARCHAR(255)
);

CREATE TABLE ORDER_M
(
	Order_ID INT IDENTITY(1,1) PRIMARY KEY,
	Customer_ID INT FOREIGN KEY REFERENCES CUSTOMER (Customer_ID),
	Address_M VARCHAR(255),
	Create_date DATE DEFAULT GETDATE(),
	Status_M VARCHAR
	(255),
	Total_price INT NOT NULL,
	Note TEXT,
	Shipping_ID INT FOREIGN KEY REFERENCES SHIPPING_METHOD(Method_ID),
	Payment_ID INT FOREIGN KEY REFERENCES PAYMENT_METHOD
	(Payment_ID)
)

CREATE TABLE ORDER_DETAIL
(
	Detail_ID INT IDENTITY(1,1) PRIMARY KEY,
	Order_ID INT NOT NULL,
	Book_ID INT NOT NULL,
	Price INT NOT NULL,
	Quantity INT NOT NULL CHECK (Quantity > 0),
	Total_cost INT NOT NULL CHECK (Total_cost >= 0),

	FOREIGN KEY(Order_ID) REFERENCES ORDER_M(Order_ID),
	FOREIGN KEY(Book_ID) REFERENCES BOOK(Book_ID)

);

CREATE TABLE CART
(
	Cart_ID INT IDENTITY(1,1) PRIMARY KEY,
	Customer_ID INT FOREIGN KEY REFERENCES CUSTOMER(Customer_ID),
);

CREATE TABLE CART_DETAIL
(
	Cart_detail_ID INT IDENTITY(1,1) PRIMARY KEY,
	Cart_ID INT FOREIGN KEY REFERENCES CART(Cart_ID),
	Book_ID INT FOREIGN KEY REFERENCES BOOK(Book_ID),
	Price INT NOT NULL,
	Quantity INT NOT NULL DEFAULT 0,
	Total_cost AS Price*Quantity
);


